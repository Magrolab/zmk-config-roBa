#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W   &kp E   &kp R  &kp T                                  &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S   &kp D   &kp F  &kp G        &none      &none          &kp H        &kp J  &kp K      &kp L    &kp LS(LEFT_SHIFT)
&kp Z      &kp X   &kp C   &kp V  &kp B        &none      &none          &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &trans  &trans  &mo 3  &lt 2 SPACE  &mo 5      &kp BACKSPACE  &lt 2 ENTER                             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&trans            &kp N7        &kp N8        &kp N9  &kp EQUAL                      &kp KP_PLUS      &mkp MB4  &kp UP_ARROW  &mkp MB5   &kp KP_MINUS
&trans            &kp N4        &kp N5        &kp N6  &kp SPACE  &none       &none   &kp ESC          &mkp MB1  &mkp MB3      &mkp MB2   &kp LEFT_SHIFT
&kp LEFT_GUI      &kp NUMBER_1  &kp NUMBER_2  &kp N3  &kp ESC    &none       &none   &kp KP_ASTERISK  &kp LEFT  &kp DOWN      &kp RIGHT  &kp KP_SLASH
&kp LEFT_CONTROL  &kp N0        &kp PERIOD    &trans  &trans     &trans      &trans  &trans                                              &trans
            >;
        };

        ARROW {
            bindings = <
&trans          &kp C_VOLUME_DOWN       &trans              &kp C_VOLUME_UP          &bt BT_CLR_ALL                      &trans  &kp MINUS      &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans          &kp LC(LS(TAB))         &kp LG(UP_ARROW)    &kp LC(TAB)              &bt BT_SEL 0    &none       &none   &trans  &kp GRAVE      &kp ASTERISK  &kp SEMI          &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &kp LG(DOWN_ARROW)  &kp LG(LS(RIGHT_ARROW))  &bt BT_SEL 1    &none       &none   &trans  &kp BACKSLASH  &kp COMMA     &kp PERIOD        &kp SLASH
&trans          &trans                  &trans              &trans                   &trans          &trans      &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &kp LEFT_ALT  &kp GRAVE                      &trans  &kp F1  &kp F2   &kp F3   &kp F4
&trans  &trans  &trans  &kp LEFT_ALT  &kp TAB    &none       &none   &trans  &kp F5  &kp F6   &kp F7   &kp F8
&trans  &trans  &trans  &none         &none      &none       &none   &trans  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans        &trans     &trans      &trans  &trans                            &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
